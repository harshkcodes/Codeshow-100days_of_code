#include <bits/stdc++.h>
using namespace std;
const int N = 1e5+1, M = 21, M2 = 1<<M;
int a[N], cn[M];
int tl[M2], mc[M][N], dp[M2];
int p2[M2];
int main() 
{
    ios_base::sync_with_stdio(false);
    int n, m; cin >> n >> m;
    for(int i = 0; i < n; ++i) {
        cin >> a[i]; --a[i];
        ++cn[a[i]];
    }
    int m2 = 1<<m;
    for(int j = 0; j <= m; ++j) p2[1<<j] = j;

    for(int j = 1; j < m2; ++j) {
        int z = j&-j; tl[j] = tl[j-z] + cn[p2[z]];
    }
    for(int t = 0; t < m; ++t) {
        for(int i = 0; i < cn[t]; ++i) {
            if(a[i]==t) ++mc[t][0];
        }
        for(int i = 1; i <= n-cn[t]; ++i) {
            mc[t][i] = mc[t][i-1] - (a[i-1]==t) + (a[i+cn[t]-1]==t);          
        }
    }
    for(int i = 1; i < m2; ++i) {
        for(int j = i; j; j -= j&-j) {
            int z = j&-j;
            dp[i] = max(dp[i], dp[i-z] + mc[p2[z]][tl[i-z]]);
        }
    }
    cout << n-dp[m2-1];
    return 0;
}

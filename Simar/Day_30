#include <iostream>

using namespace std;

class stack_by_array{
    int * data;
    int pointer_next;
    int capacity;

public:
    stack_by_array(int sizes){
        data=new int[sizes];
        pointer_next=0;
        capacity=sizes;
    }
    int size_of_stack(){
        return pointer_next;
    }
    bool isEmpty(){
        /*if(pointer_next==0){
            return true;
        }else{
            return false;
        }*/
        return pointer_next==0;
    }
    void push(int element){
        if(pointer_next==capacity){
            cout<<"stack full"<<endl;
            return ;
        }
        data[pointer_next]=element;
        pointer_next++;
    }
    int  pop(){
        if(isEmpty()){
            cout<<"stack is empty"<<endl;
            return -1;
        }
        pointer_next--;
        return data[pointer_next];
    }
    int top(){
        if(isEmpty()){
            cout<<"stack is empty"<<endl;
            return -1;
        }
        return data[pointer_next-1];
    }

};

int main()
{
    stack_by_array s(5);
    s.push(10);
    s.push(20);
    s.push(30);
    s.push(40);
    s.push(50);
    cout<<s.pop()<<endl;
    cout<<s.pop()<<endl;
    cout<<s.pop()<<endl;
    cout<<s.pop()<<endl;
    cout<<s.top()<<endl;
    cout<<s.size_of_stack()<<endl;
    cout<<s.pop()<<endl;
    cout<<s.top()<<endl;
    return 0;
}
